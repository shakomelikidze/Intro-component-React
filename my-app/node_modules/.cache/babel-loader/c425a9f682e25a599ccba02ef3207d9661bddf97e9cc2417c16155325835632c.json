{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\www\\\\intro-component-with-signup-form-master\\\\Intro-component-React\\\\my-app\\\\src\\\\inputs.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport EmptyBoxError from './emptyBoxError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Inputs() {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [inputError, setInputError] = useState(false);\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isValidEmail, setIsValidEmail] = useState(true);\n  const emailStyles = {\n    borderColor: isValidEmail ? '' : '#FF7979'\n  };\n  const validateEmail = email => {\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return regex.test(email);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateEmail(email)) {\n      setIsValidEmail(true);\n    } else {\n      setIsValidEmail(false);\n    }\n    // \n    if (firstName.trim() === '') {\n      // Input is empty, set inputError to true\n      setInputError(true);\n    } else {\n      // Input is not empty, reset inputError to false\n      setInputError(false);\n      // Handle form submission or any other action here\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EmptyBoxError, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"First Name\",\n      value: firstName,\n      onChange: e => setFirstName(e.target.value)\n      // style={{ borderColor: inputError ? '#FF7979' : '' }}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), inputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Last Name cannot be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Last Name\",\n      value: lastName,\n      onChange: e => setLastName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n      // style={emailStyles}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"claim-btn\",\n        children: \"CLAIM YOUR FREE TRIAL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Inputs, \"oLne0ibdKt0Yw7ZwKJJ1mPKqjJo=\");\n_c = Inputs;\nvar _c;\n$RefreshReg$(_c, \"Inputs\");","map":{"version":3,"names":["React","useState","EmptyBoxError","jsxDEV","_jsxDEV","Fragment","_Fragment","Inputs","_s","firstName","setFirstName","inputError","setInputError","lastName","setLastName","email","setEmail","password","setPassword","isValidEmail","setIsValidEmail","emailStyles","borderColor","validateEmail","regex","test","handleSubmit","e","preventDefault","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","style","color","onSubmit","className","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/www/intro-component-with-signup-form-master/Intro-component-React/my-app/src/inputs.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport EmptyBoxError from './emptyBoxError';\r\n\r\nexport default function Inputs() {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [inputError, setInputError] = useState(false);\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isValidEmail, setIsValidEmail] = useState(true);\r\n  const emailStyles = {\r\n    borderColor: isValidEmail ? '' : '#FF7979',\r\n  };\r\n  const validateEmail = (email) => {\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return regex.test(email);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateEmail(email)) {\r\n      setIsValidEmail(true);\r\n    } else {\r\n      setIsValidEmail(false);\r\n    }\r\n    // \r\n    if (firstName.trim() === '') {\r\n      // Input is empty, set inputError to true\r\n      setInputError(true);\r\n    } else {\r\n      // Input is not empty, reset inputError to false\r\n      setInputError(false);\r\n      // Handle form submission or any other action here\r\n    }\r\n  };\r\n\r\n  return (\r\n  <>\r\n    {/* {inputError && \r\n      <p style={\r\n        { \r\n          color: '#FF7979',\r\n          fontSize: '11px',\r\n          textAlign: 'right'\r\n        }}>\r\n        Last Name cannot be empty\r\n      </p>\r\n    } */}\r\n    <EmptyBoxError/>\r\n    <input \r\n      type='text'\r\n      placeholder='First Name'\r\n      value={firstName}\r\n      onChange={(e) => setFirstName(e.target.value)}\r\n      // style={{ borderColor: inputError ? '#FF7979' : '' }}\r\n    />\r\n    {inputError && <p style={{ color: 'red' }}>Last Name cannot be empty</p>}\r\n    <input \r\n      type='text'\r\n      placeholder='Last Name'\r\n      value={lastName}\r\n      onChange={(e) => setLastName(e.target.value)}\r\n    />\r\n    <input \r\n      type='text'\r\n      placeholder='Email'\r\n      value={email}\r\n      onChange={(e) => setEmail(e.target.value)}    \r\n      // style={emailStyles}\r\n      />\r\n    <input \r\n      type='password'\r\n      placeholder='Password'\r\n      value={password}\r\n      onChange={(e) => setPassword(e.target.value)}\r\n    />\r\n    <form onSubmit={handleSubmit}>\r\n      <button type='submit' className='claim-btn'>CLAIM YOUR FREE TRIAL</button>\r\n    </form>\r\n  </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}